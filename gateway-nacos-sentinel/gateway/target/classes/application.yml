server:
  port: 8088

spring:
  application:
    name: api-gateway

  cloud:
    # gateway的配置
    gateway:
      #路由规则
      routes:
        - id: boot_route  # 路由的唯一标识，路由到order
          uri: lb://boot-service  #需要转发的地址   lb: 使用nacos中的本地负载均衡策略  order-service服务名
          #断言规则 用于路由规则的匹配
          predicates:
            - Path=/product/**
              # http://localhost:8088/order-serv/order/add 路由到↓
              # http://localhost:8020/order-serv/order/add
            #- After=2000-12-31T23:59:59.789+08:00[Asia/Shanghai]
            #- Header=X-Request-Id,\d+
            #- Method=GET
            #- Query=name,xushu|zhuge
            #- CheckAuth=xushu2
          #filters:
          #  - CheckAuth=xushu
            #- AddRequestHeader=X-Request-color, red  #添加请求头
          #  - PrefixPath=/mall-order  # 添加前缀 对应微服务需要配置context-path
            #- RedirectTo=302, https://www.baidu.com/
            #- SetStatus= 404
          #  - StripPrefix=1  # 转发之前去掉第一层路径
            # http://localhost:8020/order/add
        #- id: stock_route
        - dubbo_route:
          uri: lb://dubbo-client
          predicates:
            - Path=/hello/**


      # 跨域配置
#      globalcors:
#        cors-configurations:
#          '[/**]':   # 允许跨域访问的资源
#            allowedOrigins: "*"   #跨域允许来源
#            allowedMethods:
#              - GET
#              - POST

    #配置Nacos
    nacos:
      discovery:
        server-addr: ${NACOS_HOSTNAME:t2}:8848
        username: nacos
        password: nacos
        namespace: test
        group: DEFAULT_GROUP

# 配置sentinel
#    sentinel:
#      transport:
#        dashboard: 127.0.0.1:8858
#      scg:
#        fallback:
#          mode: response
#          response-body: "{code:'',message:''}"


logging:
  level:
    root: DEBUG
